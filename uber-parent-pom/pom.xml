<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.coconut_palm_software</groupId>
  <artifactId>uber-parent-pom</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <plugins>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- If you're creating an OSGi bundle / Eclipse plugin using a custom MANIFEST.MF
        (e.g., using Eclipse PDE), you need to create a META-INF folder inside resources
        and symlink your regular MANIFEST.MF file to resources/META-INF/MANIFEST.MF -->
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <useDefaultManifestFile>true</useDefaultManifestFile>
        </configuration>
      </plugin>

      <plugin>
        <inherited>true</inherited>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <updateReleaseInfo>true</updateReleaseInfo>
        </configuration>
      </plugin>

      <!-- Target for creating Eclipse/p2 repositories from your regular POM-based projects. -->

      <!-- To (re)generate your site run: mvn p2:site -->
      <!-- To serve your Eclipse P2 repository site run: mvn jetty:run -->
      <!--   ...then you can add http://localhost:8080 to your Eclipse dependencies to access this site. -->

      <!-- To add your own artifacts to the generated site, add configuration/artifacts. to this plugin in the child POM.-->
      <!-- Notes: (1) Transitive dependencies will automatically be included in the site. -->
      <!--   (2) Anything that isn't already an OSGi bundle will automatically be bundled by bnd. -->

      <!-- See also:  https://github.com/reficio/p2-maven-plugin -->
      <plugin>
        <inherited>true</inherited>
        <groupId>org.reficio</groupId>
        <artifactId>p2-maven-plugin</artifactId>
        <version>1.2.0-SNAPSHOT</version>
        <executions>
          <execution>
            <id>default-cli</id>

            <!-- Configuration example
            <configuration>
              <artifacts>
                <artifact>
                  <id>com.coconut_palm_software:com.coconut_palm_software.possible:1.0.0-SNAPSHOT</id>
                  <source>true</source>
                </artifact>
              </artifacts>
            </configuration>
             -->

          </execution>
        </executions>
      </plugin>

      <plugin>
        <inherited>true</inherited>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>8.1.5.v20120716</version>
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <webAppSourceDirectory>${basedir}/target/repository/</webAppSourceDirectory>
          <webApp>
            <contextPath>/site</contextPath>
          </webApp>
        </configuration>
      </plugin>

    </plugins>

  </build>

</project>
